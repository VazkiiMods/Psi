buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id "com.diffplug.spotless" version "5.12.5"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'pmd'
apply plugin: 'org.spongepowered.mixin'

def getGitHash() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = "${mc_version}-${getGitHash()}"
group = "io.github.panda885"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: mc_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            properties 'fml.earlyprogresswindow': 'false'
            property 'forge.logging.console.level', 'debug'
            mods {
                psi {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            singleInstance(true)
            mods {
                psi {
                    source sourceSets.main
                }
            }
        }

        data {
            properties 'forge.logging.console.level': 'debug'
            properties 'fml.earlyprogresswindow': 'false'
            workingDirectory project.file('run')
            mods {
                psi {
                    source sourceSets.main
                }
            }
            args '--mod', 'psi', '--all',
                    '--existing', file('src/main/resources/'),
                    '--output', file('src/generated/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "psi.refmap.json"
    config "psi.mixins.json"
}

repositories {
    mavenCentral()
    maven {
        // for Patchouli and JEI
        name "blamejared"
        url "https://maven.blamejared.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchy_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchy_version}")

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
}

// Prevent Mixin annotation processor from getting into IDEA's annotation processor settings
if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}

pmd {
	toolVersion '6.35.0'
	incrementalAnalysis.set(true)
	ruleSets.clear()
	ruleSetFiles = files("spotless/pmd-ruleset.xml")
}

spotless {
    enforceCheck = false // workaround around jenkins having wrong line endings in some files
    // we explicitly check in github actions builds (do we?)
    java {
        targetExclude '**/Gamma.java'

        indentWithTabs()
        licenseHeaderFile('spotless/license_template.txt')
        eclipse().configFile 'spotless/eclipseformat.xml'
        removeUnusedImports()
        importOrderFile 'spotless/eclipse.importorder'
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${name}",
                "Specification-Vendor": "panda885",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": "${name}",
                "Implementation-Version": "${archiveVersion}",
                "Implementation-Vendor": "panda885",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${mod_id}.mixins.json"
        ])
    }

    exclude "**/*.bat"
    exclude "**/*.psd"
    exclude "**/*.exe"
    exclude "**/unused"
    exclude "**/*.py"
    exclude "**/*.sh"
    exclude "**/*.txt"
    exclude "**/*.sh"
    exclude "**/*.vim"
    exclude "**/mappings-en_us.json"
    exclude "**/en_us_base.json"
    finalizedBy 'reobfJar'
}
